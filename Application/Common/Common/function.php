<?php// +----------------------------------------------------------------------// | OneThink [ WE CAN DO IT JUST THINK IT ]// +----------------------------------------------------------------------// | Copyright (c) 2013 http://www.onethink.cn All rights reserved.// +----------------------------------------------------------------------// | Author: 麦当苗儿 <zuojiazi@vip.qq.com> <http://www.zjzit.cn>// +----------------------------------------------------------------------// 常量定义use Common\Model\AuthRuleModel;function hide_mobile($mobile){    return substr_replace($mobile,'****',3,4);}/** * 生成二维码 * @param  string  $url  url连接 * @param  integer $size 尺寸 纯数字 */function qrcode($url,$size=4){    Vendor('Phpqrcode.phpqrcode');    // 如果没有http 则添加//    if (strpos($url, 'http')===false) {//        $url='http://'.$url;//    }//    QRcode::png($url,false,QR_ECLEVEL_L,$size,2,false,0xFFFFFF,0x000000);        $url = urldecode($url);        $object = new \QRcode();        ob_clean();//这个一定要加上，清除缓冲区        $object->png($url,false,'Q','6','2');}/** * 支持ThinkStorm  D('xxx','Service') * @param $service * @return Model|\Think\Model */function DS($service){    return D($service,'service');}/** * 生成6位验证码 * @return array|string */function veify_code_generate(){    return \Org\Util\Stringnew::buildFormatRand('######');}function build_mysign($sort_array,$key,$sign_type = "MD5"){    $prestr = create_linkstring($sort_array);     	//把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串    $prestr = $prestr.$key;							//把拼接后的字符串再与安全校验码直接连接起来    $mysgin = reapal_sign($prestr,$sign_type);			    //把最终的字符串签名，获得签名结果    return $mysgin;}/** *  把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串 *$array 需要拼接的数组 *return 拼接完成以后的字符串 */function create_linkstring($array){    $arg  = "";    while (list ($key, $val) = each ($array))    {        $arg.=$key."=".$val."&";    }    $arg = substr($arg,0,count($arg)-2);		     //去掉最后一个&字符    return $arg;}/** *  除去数组中的空值和签名参数 *$parameter 签名参数组 *return 去掉空值与签名参数后的新签名参数组 */function para_filter($parameter){    $para = array();    while (list ($key, $val) = each ($parameter))    {        if($key == "sign" || $key == "sign_type" || $val == "")        {            continue;        }        else        {            $para[$key] = $parameter[$key];        }    }    return $para;}/**对数组排序 *$array 排序前的数组 *return 排序后的数组 */function arg_sort($array){    ksort($array);    reset($array);    return $array;}/**签名字符串 *$prestr 需要签名的字符串 *return 签名结果 */function reapal_sign($prestr,$sign_type){    $sign='';    if($sign_type == 'MD5')    {        $sign = md5($prestr);    }    else    {        die("融宝支付暂不支持".$sign_type."类型的签名方式");    }    return $sign;}//出金接口使用function array2String($array){    $string = '';    if (is_array($array)){        foreach ($array as $key=>$val) {            $string .= $key.'='.$val.'&';        }    }    return trim($string,'&');}/** * 模拟POST提交数据 * @param $url * @param $data * @return mixed */function postData($url, $data){    $ch = curl_init();    $timeout = 300;    curl_setopt($ch, CURLOPT_URL, $url);    curl_setopt( $ch, CURLOPT_USERAGENT , 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.172 Safari/537.22' );    curl_setopt($ch, CURLOPT_REFERER, "http://pay.xskec.com/");   //构造来路    curl_setopt($ch, CURLOPT_POST, true);    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);    curl_setopt($ch, CURLOPT_TIMEOUT,100);   //只需要设置一个秒的数量就可以    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);    $handles = curl_exec($ch);    curl_close($ch);    return $handles;}function http_post_json($url, $params=false) {//    $httpInfo = array();//    $ch = curl_init();////    curl_setopt( $ch, CURLOPT_HTTP_VERSION , CURL_HTTP_VERSION_1_1 );//    curl_setopt( $ch, CURLOPT_USERAGENT , 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.172 Safari/537.22' );//    curl_setopt( $ch, CURLOPT_CONNECTTIMEOUT , 30 );//    curl_setopt( $ch, CURLOPT_TIMEOUT , 30);//    curl_setopt( $ch, CURLOPT_RETURNTRANSFER , true );//    if( $ispost )//    {//        curl_setopt( $ch , CURLOPT_POST , true );//        curl_setopt( $ch , CURLOPT_POSTFIELDS , $params );//        curl_setopt( $ch , CURLOPT_URL , $url );//    }//    else//    {//        if($params){//            curl_setopt( $ch , CURLOPT_URL , $url.'?'.$params );//        }else{//            curl_setopt( $ch , CURLOPT_URL , $url);//        }//    }//    $response = curl_exec( $ch );//    if ($response === FALSE) {//        //echo "cURL Error: " . curl_error($ch);//        return false;//    }//    $httpCode = curl_getinfo( $ch , CURLINFO_HTTP_CODE );//    $httpInfo = array_merge( $httpInfo , curl_getinfo( $ch ) );//    curl_close( $ch );//    return $response;    $ch = curl_init();    curl_setopt($ch, CURLOPT_POST, 1);    curl_setopt($ch, CURLOPT_URL, $url);    curl_setopt($ch, CURLOPT_POSTFIELDS, $params);    curl_setopt($ch, CURLOPT_HTTPHEADER, array(            'Content-Type: application/json; charset=utf-8',            'Content-Length: ' . strlen($params))    );    ob_start();    curl_exec($ch);    $return_content = ob_get_contents();    ob_end_clean();    $return_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);    //return array($return_code, $return_content);    return $return_content;}/** * 获取客户端post过来的json数据，并转化为数组 * @return mixed */function getClientRequest(){    $data = file_get_contents('php://input');    $request = json_decode($data,true);    return $request;}//核算此人的消费总额function hesuan($user_id){    $rechargerecord=M("rechargerecord");    $where['user_id']=$user_id;    $where['type_id']=0;    $where['status']=array('neq',"00");    $uses=$rechargerecord->where($where)->field("order_price")->select();    $ooo=0;    foreach ($uses as &$v){        $ooo+=$v['order_price'];    }    return $ooo;}//核算此人的团队消费总额function team_hesuan1($user_id){//    $where['user_id']=$user_id;    $user=M("user");    $ooo=0;//总金额   $iff= is_xiaji($user_id);   if($iff>0){       $arr=$user->where(array('tj_id'=>$user_id))->field("user_id,tj_id")->select();//第一层       foreach ($arr as &$v){           $v['gerenxiaofeie']=hesuan($v['user_id']);         $ooo+=$v['gerenxiaofeie'];         //判断第二波           $iff2= is_xiaji($v['user_id']);            if($iff2>0){                $arr2=$user->where(array('tj_id'=>$v['user_id']))->field("user_id,tj_id")->select();                    foreach ($arr2 as &$v2){                        $v2['gerenxiaofeie']=hesuan($v2['user_id']);                        $ooo+=$v2['gerenxiaofeie'];                        //判断第三波                        $iff3= is_xiaji($v2['user_id']);                        if($iff3>0){                            $arr3=$user->where(array('tj_id'=>$v2['user_id']))->field("user_id,tj_id")->select();                            foreach ($arr3 as &$v3){                                $v3['gerenxiaofeie']=hesuan($v3['user_id']);                                $ooo+=$v3['gerenxiaofeie'];                                //第四拨                                $iff4= is_xiaji($v3['user_id']);                                if($iff4>0){                                    $arr4=$user->where(array('tj_id'=>$v3['user_id']))->field("user_id,tj_id")->select();                                    foreach ($arr4 as &$v4){                                        $v4['gerenxiaofeie']=hesuan($v4['user_id']);                                        $ooo+=$v4['gerenxiaofeie'];//第五波                                        $iff5= is_xiaji($v4['user_id']);                                        if($iff5>0){                                            $arr5=$user->where(array('tj_id'=>$v4['user_id']))->field("user_id,tj_id")->select();                                            foreach ($arr5 as &$v5) {                                                $v5['gerenxiaofeie'] = hesuan($v5['user_id']);                                                $ooo += $v5['gerenxiaofeie'];                                                //第六波                                                $iff6= is_xiaji($v5['user_id']);                                                if($iff6>0){                                                    $arr6=$user->where(array('tj_id'=>$v5['user_id']))->field("user_id,tj_id")->select();                                                    foreach ($arr6 as &$v6) {                                                        $v6['gerenxiaofeie'] = hesuan($v6['user_id']);                                                        $ooo += $v6['gerenxiaofeie'];                                                        //第七波                                                        $iff7= is_xiaji($v6['user_id']);                                                        if($iff7>0){                                                            $arr7=$user->where(array('tj_id'=>$v6['user_id']))->field("user_id,tj_id")->select();                                                            foreach ($arr7 as &$v7) {                                                                $v7['gerenxiaofeie'] = hesuan($v7['user_id']);                                                                $ooo += $v7['gerenxiaofeie'];                                                                //第八波                                                                $iff8= is_xiaji($v7['user_id']);                                                                if($iff8>0){                                                                    $arr8=$user->where(array('tj_id'=>$v7['user_id']))->field("user_id,tj_id")->select();                                                                    foreach ($arr8 as &$v8) {                                                                        $v8['gerenxiaofeie'] = hesuan($v8['user_id']);                                                                        $ooo += $v8['gerenxiaofeie'];                                                                    }                                                                }                                                            }                                                        }                                                    }                                                }                                            }                                        }                                    }                                }                            }                        }                    }            }       }       //   }    return $ooo;}function team_hesuanyuan($user_id){//    $where['user_id']=$user_id;    $user=M("user");//    $ooo=hesuan($user_id);//总金额    $ooo=0;   $iff= is_xiaji($user_id);   if($iff>0){       $arr=$user->where(array('tj_id'=>$user_id))->field("user_id,tj_id")->select();//第一层       foreach ($arr as &$v){           $v['gerenxiaofeie']=hesuan($v['user_id']);         $ooo+=$v['gerenxiaofeie'];         //判断第二波           $iff2= is_xiaji($v['user_id']);            if($iff2>0){                $arr2=$user->where(array('tj_id'=>$v['user_id']))->field("user_id,tj_id")->select();                    foreach ($arr2 as &$v2){                        $v2['gerenxiaofeie']=hesuan($v2['user_id']);                        $ooo+=$v2['gerenxiaofeie'];                        //判断第三波                        $iff3= is_xiaji($v2['user_id']);                        if($iff3>0){                            $arr3=$user->where(array('tj_id'=>$v2['user_id']))->field("user_id,tj_id")->select();                            foreach ($arr3 as &$v3){                                $v3['gerenxiaofeie']=hesuan($v3['user_id']);                                $ooo+=$v3['gerenxiaofeie'];                                //第四拨                                $iff4= is_xiaji($v3['user_id']);                                if($iff4>0){                                    $arr4=$user->where(array('tj_id'=>$v3['user_id']))->field("user_id,tj_id")->select();                                    foreach ($arr4 as &$v4){                                        $v4['gerenxiaofeie']=hesuan($v4['user_id']);                                        $ooo+=$v4['gerenxiaofeie'];//第五波                                        $iff5= is_xiaji($v4['user_id']);                                        if($iff5>0){                                            $arr5=$user->where(array('tj_id'=>$v4['user_id']))->field("user_id,tj_id")->select();                                            foreach ($arr5 as &$v5) {                                                $v5['gerenxiaofeie'] = hesuan($v5['user_id']);                                                $ooo += $v5['gerenxiaofeie'];                                                //第六波                                                $iff6= is_xiaji($v5['user_id']);                                                if($iff6>0){                                                    $arr6=$user->where(array('tj_id'=>$v5['user_id']))->field("user_id,tj_id")->select();                                                    foreach ($arr6 as &$v6) {                                                        $v6['gerenxiaofeie'] = hesuan($v6['user_id']);                                                        $ooo += $v6['gerenxiaofeie'];                                                        //第七波                                                        $iff7= is_xiaji($v6['user_id']);                                                        if($iff7>0){                                                            $arr7=$user->where(array('tj_id'=>$v6['user_id']))->field("user_id,tj_id")->select();                                                            foreach ($arr7 as &$v7) {                                                                $v7['gerenxiaofeie'] = hesuan($v7['user_id']);                                                                $ooo += $v7['gerenxiaofeie'];                                                                //第八波                                                                $iff8= is_xiaji($v7['user_id']);                                                                if($iff8>0){                                                                    $arr8=$user->where(array('tj_id'=>$v7['user_id']))->field("user_id,tj_id")->select();                                                                    foreach ($arr8 as &$v8) {                                                                        $v8['gerenxiaofeie'] = hesuan($v8['user_id']);                                                                        $ooo += $v8['gerenxiaofeie'];                                                                    }                                                                }                                                            }                                                        }                                                    }                                                }                                            }                                        }                                    }                                }                            }                        }                    }            }       }       //   }    return $ooo;}//设置headerfunction header_utf8(){    header('Content-Type:text/html; charset=utf-8');}//截取文章function getcon($content){    $des=mb_substr( $content, 0, 200, 'utf-8');    return $des;}//截取文章function getcon1($content){    $des=mb_substr( $content, 0, 80, 'utf-8');    return $des;}function get_productname($id){    $type_name=M('product')->where("id='$id'")->getfield('pro_name');    return $type_name;}/** * 格式化数字，保留两位小数 * @param $num * @return float */function NumFormat($num){    return sprintf("%.2f", $num);}/** * 保留两位小数，直接取整不四舍五入 * @param  float $str * @return array | string */function floorEx($str){	return floor($str*100)/100;}//字符串切割函数 str为字符串 num为每段分割为几/** * 字符串切割函数 * @param  string $str 需要分割的字符串 * @param  boole $isarray 返回数组还是字符串 * @param  integer $num 每组的长度 * @param  string $split 分割符 * @return array | string * @author 隋涛  2015-05-07 */function strSplit($str, $isarray=false, $num=4, $split=' '){	$len=mb_strlen($str,'utf-8');//获取字符串长度 每个汉字算1	$partNum=ceil($len/$num);	$arr=array();	for($i=0;$i<$partNum;$i++){		$begin=$i*$num;		$arr[]=iconv_substr($str,$begin,$num,'utf-8');	}	if($isarray){ 		return $arr;	}	else{ 		return implode($split,$arr);	}}/** * 判断当前时间是否属于节假日 * @return bool false-正常通道，true-节假日 * @author  */function is_holiday(){ 	$now = date('H:i:s');//date('H:i:s')>'09:00:00'	//每天的时间段为假日	if($now < C('CHANNEL_START_TIME') || $now > C('CHANNEL_END_TIME')){ 		return true;	}	//周六周日为假日	if(date('w') == 6 || date('w') == 0){ 		return true;	}	//从数据库中查找是否定义有假日	$date = date('Y-m-d');//当前日期	$Holiday = M('Holiday');	$map['holiday'] = $date;	$data = $Holiday->where($map)->select();	if($data){		return true;	}	return false;}/** * 获取本周开始的时间戳 */function getFirstDayOfWeek(){    return date(strtotime("monday -1 week"));    //echo date('Y-m-d 00:00:00', strtotime("monday -1 week"));    //echo '<br />';    //echo date(strtotime("monday -1 week"));    //echo date('Y-m-d H:i:s', 1433088000);}/** * TODO 基础分页的相同代码封装，使前台的代码更少，修改过Page.class.php类，增加ShowEx()方法，增强对ZUI的支持 * @param $count 要分页的总记录数 * @param int $pagesize 每页查询条数 * @return \Think\Page */function getpages($count, $pagesize = 10) {    $p = new Think\Page($count, $pagesize);    $p->setConfig('header', '<li>共<b>%TOTAL_ROW%</b>条记录&nbsp;第<b>%NOW_PAGE%</b>页/共<b>%TOTAL_PAGE%</b>页</li>');    $p->setConfig('prev', '上一页');    $p->setConfig('next', '下一页');    $p->setConfig('last', '末页');    $p->setConfig('first', '首页');    $p->setConfig('theme', '%FIRST%%UP_PAGE%%LINK_PAGE%%DOWN_PAGE%%END%%HEADER%');    $p->lastSuffix = false;//最后一页不显示为总页数    return $p->showEx();}/** * TODO 基础分页的相同代码封装，使前台的代码更少，修改过Page.class.php类，增加ShowEx2()方法，增强对ShopNC界面的支持 * @param $count 要分页的总记录数 * @param int $pagesize 每页查询条数 * @return \Think\Page */function getpages2($count, $pagesize = 20, $map =array()) {    $p = new Think\Page($count, $pagesize);    //$p->setConfig('header', '<li>共<b>%TOTAL_ROW%</b>条记录&nbsp;第<b>%NOW_PAGE%</b>页/共<b>%TOTAL_PAGE%</b>页</li>');    $p->setConfig('prev', '上一页');    $p->setConfig('next', '下一页');    $p->setConfig('last', '末页');    $p->setConfig('first', '首页');    //$p->setConfig('theme', '%FIRST%%UP_PAGE%%LINK_PAGE%%DOWN_PAGE%%END%%HEADER%');    $p->lastSuffix = false;//最后一页不显示为总页数    if(!empty($map)){        foreach($map as $key=>$val) {            $p->parameter .= "$key=".urlencode($val).'&';        }    }    return $p->showEx2();}/** * 检测用户是否登录 * @return integer 0-未登录，大于0-当前登录用户ID * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function is_login(){    $user = session('user_auth');    if (empty($user)) {        return 0;    } else {        return session('user_auth_sign') == data_auth_sign($user) ? $user['uid'] : 0;    }}function get_uid(){    return is_login();}/** * 检测权限 */function CheckPermission($uids){    if (is_administrator()) {        return true;    }    if (in_array(is_login(), $uids)) {        return true;    }    return false;}function check_auth($rule, $type = AuthRuleModel::RULE_URL){    if (is_administrator()) {        return true;//管理员允许访问任何页面    }    static $Auth = null;    if (!$Auth) {        $Auth = new \Think\Auth();    }    if (!$Auth->check($rule, get_uid(), $type)) {        return false;    }    return true;}function dateformat($times,$format=1){    if($times){        if($format==1){            return date('Y-m-d H:i:s',$times);        }        else if($format==2){            return date('Y-m-d H:i',$times);        }        else if($format==3){            return date('Y-m-d',$times);        }        else if($format==4){            return date('Y年m月d日',$times);        }        else if($format==5){            return date('Y年',$times);        }        else if($format==6){            return date('m月d日H时i分',$times);        }        else if($format==7){            return date('m月d日',$times);        }else if($format==10){            return date('m-d H:i',$times);        }        else if($format==8){            return date('YmdHis',$times);        }        else if($format==9){            return date('Ymd',$times);        }    }    return '';}//得到首字母大写function getfirstchar($s0){    $fchar = ord($s0{0});    if($fchar >= ord("A") and $fchar <= ord("z") )return strtoupper($s0{0});    $s1 = @iconv("UTF-8","gb2312", $s0);    $s2 = @iconv("gb2312","UTF-8", $s1);    if($s2 == $s0){$s = $s1;}else{$s = $s0;}    $asc = ord($s{0}) * 256 + ord($s{1}) - 65536;    if($asc >= -20319 and $asc <= -20284) return "A";    if($asc >= -20283 and $asc <= -19776) return "B";    if($asc >= -19775 and $asc <= -19219) return "C";    if($asc >= -19218 and $asc <= -18711) return "D";    if($asc >= -18710 and $asc <= -18527) return "E";    if($asc >= -18526 and $asc <= -18240) return "F";    if($asc >= -18239 and $asc <= -17923) return "G";    if($asc >= -17922 and $asc <= -17418) return "H";    if($asc >= -17417 and $asc <= -16475) return "J";    if($asc >= -16474 and $asc <= -16213) return "K";    if($asc >= -16212 and $asc <= -15641) return "L";    if($asc >= -15640 and $asc <= -15166) return "M";    if($asc >= -15165 and $asc <= -14923) return "N";    if($asc >= -14922 and $asc <= -14915) return "O";    if($asc >= -14914 and $asc <= -14631) return "P";    if($asc >= -14630 and $asc <= -14150) return "Q";    if($asc >= -14149 and $asc <= -14091) return "R";    if($asc >= -14090 and $asc <= -13319) return "S";    if($asc >= -13318 and $asc <= -12839) return "T";    if($asc >= -12838 and $asc <= -12557) return "W";    if($asc >= -12556 and $asc <= -11848) return "X";    if($asc >= -11847 and $asc <= -11056) return "Y";    if($asc >= -11055 and $asc <= -10247) return "Z";    return null;}//获取品牌名称function get_periods($periods){$type=M("types");if($periods==""){    $list="暂无";}else{    $list = $type->where("id=".$periods)->getField("type_name");}        return $list;}//获取门店名称function get_merchant($periods){$type=M("merchant");    if($periods==""){        $list="暂无";    }else {        $list = $type->where(array('user_id' => $periods))->getField("corporate_name");    }    return $list;}//获取活动名称function get_activity_offset($periods){$type=M("activity_offset");    $list = $type->where(array('id'=>$periods))->field("payment,deductible")->find();    return "支付".$list['payment']."抵扣".$list['deductible'];}//获取活动结束时间function get_activity_time($periods){$type=M("activity_offset");    $list = $type->where(array('id'=>$periods))->getField("times");    return $list;}function get_kuaidiming($name){    $kuaidi=M("kuaidi");    $name=$kuaidi->where(array('name'=>$name))->getfield("express");    return $name;}function get_level($level){//    1总管理员2省代理3市代理4区县代理5经纪人6普通用户    if($level){        if($level==1){            return "管理员";        }        else if($level==2){            return "普通用户";        }        else if($level==3){            return "VIP用户";        }    }    return '普通用户';}function get_levelw($level){//    1总管理员2省代理3市代理4区县代理5经纪人6普通用户    if($level){        if($level==1){            return "手机端注册";        }        else if($level==2){            return "微信快捷登录";        }        else if($level==3){            return "QQ快捷登录";        }else        {            return '后台添加';        }    }    return '普通用户';}function get_chognzhi($level){        if($level==1){            return "微信";        }        else if($level==2){            return "支付宝";        }        else if($level==7){            return "后台充值";        }else if($level==8){            return "定金转换碳积分";        }else if($level==6){            return "退货转换碳积分";        }        else {            return "其他";        }}function get_status($level){    if($level){        if($level=="00"){            return "待付款";        }        else if($level=="03"){            return "已付款,待发货";        }        else if($level=="04"){            return "待收货";        }        else if($level=="05"){            return "已收货,待评价";        }        else if($level=="06"){            return "已完成";        }else{            return "退货";        }    }//    return '普通用户';}function get_tuihuo($level){    //1状态正常2申请退货3正在处理中4已退款5退款申请驳回    if($level){        if($level=="1"){            return "未提交申请";        }        else if($level=="2"){            return "申请退货待处理";        }        else if($level=="3"){            return "正在处理中";        }        else if($level=="4"){            return "已退款";        }        else if($level=="5"){            return "退款申请驳回";        }else{            return "状态异常";        }    }//    return '普通用户';}//获得广告位分类function get_parent($id){    $content=M('adposition')->where("id='$id'")->getField("cad_name");    return $content;}//获得广告位分类function get_notice($id){    $content=M('notice')->where("id='$id'")->getField("content");    return $content;}//获得用户名function get_username($id){    $content=M('user')->where("user_id='$id'")->getField("username");    return $content;}function get_thumb($id){    $content=M('user')->where("user_id='$id'")->getField("thumb");    return $content;}function get_jiguang($id){    $content=M('user')->where("user_id='$id'")->getField("jiguang");    return $content;}function get_levels($id){    $content=M('user')->where("user_id='$id'")->getField("level");    return $content;}function get_title($id){    $content=M('workss')->where("id='$id'")->getField("news_title");    return $content;}function get_user($id){    $content=M('workss')->where("id='$id'")->getField("user_id");    return $content;}function getgifts($id){    $content=M('gifts')->where("gifts_title='$id'")->getField("thumb");    return $content;}//获得用户名function get_truename($id){    $content=M('user')->where("user_id='$id'")->getField("truename");    if($content==""){        $content=$id;    }    return $content;}function get_mobile($id){    $content=M('user')->where("user_id='$id'")->getField("mobile");    return $content;}//十分关注某人function get_guanzhu($id,$bgz){    $likelog=M("likelog");    $map['likeid']= $bgz;    $map['tables']="user";    $map['user_id']=$id;    $map['types']=2;//关注的人    if($likelog->where($map)->getField('id')){        return 1;//已关注发布人    }else{        return 2;//未关注发布人    }}//获得用户名男女//分类名称function get_types($id){    $content=M('types')->where("id='$id'")->getField("type_name");    return $content;}//分类名称function getpid($id){    $content=M('types')->where("id='$id'")->getField("pid");    $content=M('types')->where("id='$content'")->getField("id");    return $content;}function isIdCard($number) { // 检查是否是身份证号//    $number = getIDCard($number);    // 转化为大写，如出现x    $number = strtoupper($number);    //加权因子    $wi = array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);    //校验码串    $ai = array('1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2');    //按顺序循环处理前17位    $sigma = 0;    for ($i = 0;$i < 17;$i++) {        //提取前17位的其中一位，并将变量类型转为实数        $b = (int) $number{$i};        //提取相应的加权因子        $w = $wi[$i];        //把从身份证号码中提取的一位数字和加权因子相乘，并累加        $sigma += $b * $w;    }    //计算序号    $snumber = $sigma % 11;    //按照序号从校验码串中提取相应的字符。    $check_number = $ai[$snumber];    if ($number{17} == $check_number) {        return 1;    } else {        return 2;    }}/** * 检测当前用户是否为管理员 * @return boolean true-管理员，false-非管理员 * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function is_administrator($uid = null){    $uid = is_null($uid) ? is_login() : $uid;    $admin_uids = explode(',', C('USER_ADMINISTRATOR'));//调整验证机制，支持多管理员，用,分隔    //dump($admin_uids);exit;    return $uid && (in_array(intval($uid), $admin_uids));//调整验证机制，支持多管理员，用,分隔}/** * 字符串转换为数组，主要用于把分隔符调整到第二个参数 * @param  string $str 要分割的字符串 * @param  string $glue 分割符 * @return array * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function str2arr($str, $glue = ','){    return explode($glue, $str);}/** * 数组转换为字符串，主要用于把分隔符调整到第二个参数 * @param  array  $arr 要连接的数组 * @param  string $glue 分割符 * @return string * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function arr2str($arr, $glue = ','){    return implode($glue, $arr);}/** * 字符串截取，支持中文和其他编码 * @static * @access public * @param string $str 需要转换的字符串 * @param int $start 开始位置 * @param string $length 截取长度 * @param string $charset 编码格式 * @param bool $suffix 截断显示字符 * @return string */function msubstr($str, $start = 0, $length, $charset = "utf-8", $suffix = true){    if (function_exists("mb_substr"))        $slice = mb_substr($str, $start, $length, $charset);    elseif (function_exists('iconv_substr')) {        $slice = iconv_substr($str, $start, $length, $charset);        if (false === $slice) {            $slice = '';        }    } else {        $re['utf-8'] = "/[\x01-\x7f]|[\xc2-\xdf][\x80-\xbf]|[\xe0-\xef][\x80-\xbf]{2}|[\xf0-\xff][\x80-\xbf]{3}/";        $re['gb2312'] = "/[\x01-\x7f]|[\xb0-\xf7][\xa0-\xfe]/";        $re['gbk'] = "/[\x01-\x7f]|[\x81-\xfe][\x40-\xfe]/";        $re['big5'] = "/[\x01-\x7f]|[\x81-\xfe]([\x40-\x7e]|\xa1-\xfe])/";        preg_match_all($re[$charset], $str, $match);        $slice = join("", array_slice($match[0], $start, $length));    }    return $suffix ? $slice . '...' : $slice;}function msubstr50($str){    return op_t(msubstr($str, 0, 2000, "utf-8", true));}function substr30(){}/** * 系统非常规MD5加密方法 * @param  string $str 要加密的字符串 * @return string */function uc_md5($str, $key = 'xskec'){	return '' === $str ? '' : md5(sha1($str) . $key);}/** * 系统加密方法 * @param string $data 要加密的字符串 * @param string $key 加密密钥 * @param int    $expire 过期时间 单位 秒 * @return string * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function think_encrypt($data, $key = '', $expire = 0){    $key = md5(empty($key) ? C('DATA_AUTH_KEY') : $key);    $data = base64_encode($data);    $x = 0;    $len = strlen($data);    $l = strlen($key);    $char = '';    for ($i = 0; $i < $len; $i++) {        if ($x == $l) $x = 0;        $char .= substr($key, $x, 1);        $x++;    }    $str = sprintf('%010d', $expire ? $expire + time() : 0);    for ($i = 0; $i < $len; $i++) {        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);    }    return str_replace(array('+', '/', '='), array('-', '_', ''), base64_encode($str));}/** * 系统解密方法 * @param  string $data 要解密的字符串 （必须是think_encrypt方法加密的字符串） * @param  string $key 加密密钥 * @return string * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function think_decrypt($data, $key = ''){    $key = md5(empty($key) ? C('DATA_AUTH_KEY') : $key);    $data = str_replace(array('-', '_'), array('+', '/'), $data);    $mod4 = strlen($data) % 4;    if ($mod4) {        $data .= substr('====', $mod4);    }    $data = base64_decode($data);    $expire = substr($data, 0, 10);    $data = substr($data, 10);    if ($expire > 0 && $expire < time()) {        return '';    }    $x = 0;    $len = strlen($data);    $l = strlen($key);    $char = $str = '';    for ($i = 0; $i < $len; $i++) {        if ($x == $l) $x = 0;        $char .= substr($key, $x, 1);        $x++;    }    for ($i = 0; $i < $len; $i++) {        if (ord(substr($data, $i, 1)) < ord(substr($char, $i, 1))) {            $str .= chr((ord(substr($data, $i, 1)) + 256) - ord(substr($char, $i, 1)));        } else {            $str .= chr(ord(substr($data, $i, 1)) - ord(substr($char, $i, 1)));        }    }    return base64_decode($str);}/** * 数据签名认证 * @param  array $data 被认证的数据 * @return string       签名 * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function data_auth_sign($data){    //数据类型检测    if (!is_array($data)) {        $data = (array)$data;    }    ksort($data); //排序    $code = http_build_query($data); //url编码并生成query字符串    $sign = sha1($code); //生成签名    return $sign;}/** * 对查询结果集进行排序 * @access public * @param array  $list 查询结果 * @param string $field 排序的字段名 * @param array  $sortby 排序类型 * asc正向排序 desc逆向排序 nat自然排序 * @return array */function list_sort_by($list, $field, $sortby = 'asc'){    if (is_array($list)) {        $refer = $resultSet = array();        foreach ($list as $i => $data)            $refer[$i] = &$data[$field];        switch ($sortby) {            case 'asc': // 正向排序                asort($refer);                break;            case 'desc': // 逆向排序                arsort($refer);                break;            case 'nat': // 自然排序                natcasesort($refer);                break;        }        foreach ($refer as $key => $val)            $resultSet[] = &$list[$key];        return $resultSet;    }    return false;}/** * 把返回的数据集转换成Tree * @param array  $list 要转换的数据集 * @param string $pid parent标记字段 * @param string $level level标记字段 * @return array * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function list_to_tree($list, $pk = 'mobile', $pid = 'tj_mobile', $child = '_child', $root = 0){    // 创建Tree    $tree = array();    if (is_array($list)) {        // 创建基于主键的数组引用        $refer = array();        foreach ($list as $key => $data) {            $refer[$data[$pk]] =& $list[$key];        }        foreach ($list as $key => $data) {            // 判断是否存在parent            $parentId = $data[$pid];            if ($root == $parentId) {                $tree[] =& $list[$key];            } else {                if (isset($refer[$parentId])) {                    $parent =& $refer[$parentId];                    $parent[$child][] =& $list[$key];                }            }        }    }  return $list;//    return $tree;}/** * 格式化字节大小 * @param  number $size 字节数 * @param  string $delimiter 数字和单位分隔符 * @return string            格式化后的带单位的大小 * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function format_bytes($size, $delimiter = ''){    $units = array('B', 'KB', 'MB', 'GB', 'TB', 'PB');    for ($i = 0; $size >= 1024 && $i < 5; $i++) $size /= 1024;    return round($size, 2) . $delimiter . $units[$i];}/** * 设置跳转页面URL * 使用函数再次封装，方便以后选择不同的存储方式（目前使用cookie存储） * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function set_redirect_url($url){    cookie('redirect_url', $url);}/** * 获取跳转页面URL * @return string 跳转页URL * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function get_redirect_url(){    $url = cookie('redirect_url');    return empty($url) ? __APP__ : $url;}/** * 获取数据的所有子孙数据的id值 * @author 朱亚杰 <xcoolcc@gmail.com> */function get_stemma($pids, Model &$model, $field = 'id'){    $collection = array();    //非空判断    if (empty($pids)) {        return $collection;    }    if (is_array($pids)) {        $pids = trim(implode(',', $pids), ',');    }    $result = $model->field($field)->where(array('pid' => array('IN', (string)$pids)))->select();    $child_ids = array_column((array)$result, 'id');    while (!empty($child_ids)) {        $collection = array_merge($collection, $result);        $result = $model->field($field)->where(array('pid' => array('IN', $child_ids)))->select();        $child_ids = array_column((array)$result, 'id');    }    return $collection;}/** * t函数用于过滤标签，输出没有html的干净的文本 * @param string text 文本内容 * @return string 处理后内容 */function op_t($text){    $text = nl2br($text);    $text = real_strip_tags($text);    $text = addslashes($text);    $text = trim($text);    return $text;}/**过滤函数，别名函数，op_t的别名 * @param $text * @auth 陈一枭 */function text($text){    return op_t($text);}/**过滤函数，别名函数，op_h的别名 * @param $text * @auth 陈一枭 */function html($text){    return op_h($text);}/** * h函数用于过滤不安全的html标签，输出安全的html * @param string $text 待过滤的字符串 * @param string $type 保留的标签格式 * @return string 处理后内容 */function op_h($text, $type = 'html'){    // 无标签格式    $text_tags = '';    //只保留链接    $link_tags = '<a>';    //只保留图片    $image_tags = '<img>';    //只存在字体样式    $font_tags = '<i><b><u><s><em><strong><font><big><small><sup><sub><bdo><h1><h2><h3><h4><h5><h6>';    //标题摘要基本格式    $base_tags = $font_tags . '<p><br><hr><a><img><map><area><pre><code><q><blockquote><acronym><cite><ins><del><center><strike>';    //兼容Form格式    $form_tags = $base_tags . '<form><input><textarea><button><select><optgroup><option><label><fieldset><legend>';    //内容等允许HTML的格式    $html_tags = $base_tags . '<ul><ol><li><dl><dd><dt><table><caption><td><th><tr><thead><tbody><tfoot><col><colgroup><div><span><object><embed><param>';    //专题等全HTML格式    $all_tags = $form_tags . $html_tags . '<!DOCTYPE><meta><html><head><title><body><base><basefont><script><noscript><applet><object><param><style><frame><frameset><noframes><iframe>';    //过滤标签    $text = real_strip_tags($text, ${$type . '_tags'});    // 过滤攻击代码    if ($type != 'all') {        // 过滤危险的属性，如：过滤on事件lang js        while (preg_match('/(<[^><]+)(ondblclick|onclick|onload|onerror|unload|onmouseover|onmouseup|onmouseout|onmousedown|onkeydown|onkeypress|onkeyup|onblur|onchange|onfocus|action|background|codebase|dynsrc|lowsrc)([^><]*)/i', $text, $mat)) {            $text = str_ireplace($mat[0], $mat[1] . $mat[3], $text);        }        while (preg_match('/(<[^><]+)(window\.|javascript:|js:|about:|file:|document\.|vbs:|cookie)([^><]*)/i', $text, $mat)) {            $text = str_ireplace($mat[0], $mat[1] . $mat[3], $text);        }    }    return $text;}function real_strip_tags($str, $allowable_tags = ""){    $str = html_entity_decode($str, ENT_QUOTES, 'UTF-8');    return strip_tags($str, $allowable_tags);}function action_log_and_get_score($action = null, $model = null, $record_id = null, $user_id = null){   /* $score_before = getMyScore();    action_log($action, $model, $record_id, $user_id);    $score_after = getMyScore();    return $score_after - $score_before;*/}/** * create_rand随机生成一个字符串 * @param int $length  字符串的长度 * @param string $type  类型 * @return string * @author:xjw129xjt(肖骏涛) xjt@ourstu.com */function create_rand($length = 8,$type='all'){    $num = '0123456789';    $letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';    if($type == 'num'){        $chars = $num;    }elseif($type=='letter'){        $chars = $letter;    }else{        $chars = $letter.$num;    }    $str = '';    for ($i = 0; $i < $length; $i++) {        $str .= $chars[mt_rand(0, strlen($chars) - 1)];    }    return $str;}/** * 生成系统AUTH_KEY * @author 麦当苗儿 <zuojiazi@vip.qq.com> */function build_auth_key(){    $chars  = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';    // $chars .= '`~!@#$%^&*()_+-=[]{};:"|,.<>/?';    $chars  = str_shuffle($chars);    return substr($chars, 0, 40);}//生成6位随机数function sclws(){    $user=M("user");    $m=4;    $new_str= '';    $str= 'ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghjklmnopqrstuvwsyz23456789';    for($i= 1; $i<= $m; ++$i) {        $new_str.=$str[mt_rand(0, 57)];    }    if($user->where(array('user_id'=>$new_str))->find()){        $this->sclws();    }    return $new_str;}//生成6位随机数function hyxt($aa){    $hyxt=strpos($aa,"hyxt");    if($hyxt==true){        return 1;    }else{        return 2;    }}/** * 调用系统的API接口方法（静态方法） * api('User/getName','id=5'); 调用公共模块的User接口的getName方法 * api('Admin/User/getName','id=5');  调用Admin模块的User接口 * @param  string  $name 格式 [模块名]/接口名/方法名 * @param  array|string  $vars 参数 */function api($name,$vars=array()){    $array     = explode('/',$name);    $method    = array_pop($array);    $classname = array_pop($array);    $module    = $array? array_pop($array) : 'Common';    $callback  = $module.'\\Api\\'.$classname.'Api::'.$method;    if(is_string($vars)) {        parse_str($vars,$vars);    }    return call_user_func_array($callback,$vars);}//图片上传   $f：上传图片目录     $t：以当天时间命名文件目录function up_imgs($f='ads'){    $t=date("Y-m-d",time());    $targetFolder ="/Uploads/$f/";    if (!file_exists($targetFolder)) {        @mkdir($targetFolder);    }    if (!empty($_FILES) ) {        $tempFile = $_FILES['file']['tmp_name'];        $targetPath = $_SERVER['DOCUMENT_ROOT'] . $targetFolder;        MkFolder($targetPath);        $str=strrchr($_FILES['file']['name'],".");        $str=date('YmdHis').uniqid().$str;//生成唯一图片名        $targetFile = rtrim($targetPath,'/') . '/' . strtolower($str);        // $fileTypes = array('jpg','jpeg','gif','png','mp4','xls','exe','txt','doc','docx','mp3'); //文件类型        $fileTypes = array('jpg','jpeg','gif','png','JPG','JPEG','GIF','PNG',''); //文件类型        $fileParts = pathinfo($_FILES['file']['name']);        if (in_array($fileParts['extension'],$fileTypes)) {            move_uploaded_file($tempFile,$targetFile);            //echo $str;            $str=$targetFolder.$str;            return $str;        } else{            message('您上传的图片格式不正确，请重新选择!',1);        }    }}/*递归建立多层目录函数*/function MkFolder($path){    if(!is_readable($path)){        MkFolder( dirname($path) );    }    if(!is_file($path)){        mkdir($path,0777);    }}function message($str='',$url=''){    header("Content-type: textml; charset=utf-8");    if ($url==1) {        $js="<script>alert('".$str."');history.go(-1);</script>";    }elseif($url==2){        $js="<script>alert('".$str."');history.go(-2);</script>";    }elseif($url==3){        $js="<script>alert('".$str."');history.go(-0);</script>";    }elseif($url!=''){        $js="<script>alert('".$str."');location.href='".$url."';</script>";    }else{        $js="<script>alert('".$str."');</script>";    }    echo $js;exit;}function p($arr){    echo "<pre>";    print_r($arr);}